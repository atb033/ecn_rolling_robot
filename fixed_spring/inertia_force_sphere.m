function Fout = inertia_force_sphere( q, dq, ddq, data)

% 3 constraint equations of the model

m = data.m;
R = data.R;

r1 = q(1);
r2 = q(2);
r3 = q(3);
r4 = q(4);
alpha = q(5);
beta = q(6);
gamma = q(7);

dr3 =dq(3);
dr4 =dq(4);
omx = dq(5);
omy = dq(6);
omz = dq(7);

ddr1 = ddq(1);
ddr2 = ddq(2);
ddr3 = ddq(3);
ddr4 = ddq(4);
omdx = ddq(5);
omdy = ddq(6);
omdz = ddq(7);

sqrt2 = sqrt(2);
sqrt3 = sqrt(3);
sqrt6 = sqrt(6);

Fout = zeros(4,1);
Fout(1) = m*((ddr1 - r1*(power(omx,2) + power(omy,2)))*power(cos(beta),2)*power(cos(gamma),2) + ddr1*power(cos(gamma),2)*power(sin(alpha),2)*power(sin(beta),2) - ...
     r1*power(omx,2)*power(cos(gamma),2)*power(sin(alpha),2)*power(sin(beta),2) - r1*power(omz,2)*power(cos(gamma),2)*power(sin(alpha),2)*power(sin(beta),2) + ...
     ddr1*power(sin(alpha),2)*power(sin(gamma),2) - r1*power(omy,2)*power(sin(alpha),2)*power(sin(gamma),2) - r1*power(omz,2)*power(sin(alpha),2)*power(sin(gamma),2) + ...
     omx*omy*r1*power(cos(gamma),2)*power(sin(beta),2)*sin(2*alpha) - omdx*R*cos(gamma)*sin(alpha)*sin(beta) + omdy*R*sin(alpha)*sin(gamma) + ...
     power(cos(alpha),2)*((ddr1 - r1*(power(omy,2) + power(omz,2)))*power(cos(gamma),2)*power(sin(beta),2) + (ddr1 - r1*(power(omx,2) + power(omz,2)))*power(sin(gamma),2) - ...
        2*omx*omy*r1*cos(gamma)*sin(beta)*sin(gamma)) + 2*omz*r1*cos(beta)*cos(gamma)*...
      (sin(alpha)*(omy*cos(gamma)*sin(beta) + omx*sin(gamma)) + cos(alpha)*(omx*cos(gamma)*sin(beta) - omy*sin(gamma))) + omx*omy*r1*power(sin(alpha),2)*sin(beta)*sin(2*gamma) + ...
     cos(alpha)*(-2*omx*omy*r1*power(sin(gamma),2)*sin(alpha) + omdx*R*sin(gamma) + cos(gamma)*sin(beta)*(omdy*R - 2*r1*power(omy,2)*sin(alpha)*sin(gamma)) + ...
        r1*power(omx,2)*sin(alpha)*sin(beta)*sin(2*gamma)));

Fout(2) = (m*(8*ddr2*power(sin(beta),2) - 8*r2*power(omx,2)*power(sin(beta),2) - 8*r2*power(omy,2)*power(sin(beta),2) + ddr2*power(cos(gamma),2)*power(sin(alpha),2)*power(sin(beta),2) - ...
       r2*power(omx,2)*power(cos(gamma),2)*power(sin(alpha),2)*power(sin(beta),2) - r2*power(omz,2)*power(cos(gamma),2)*power(sin(alpha),2)*power(sin(beta),2) + ...
       ddr2*power(sin(alpha),2)*power(sin(gamma),2) - r2*power(omy,2)*power(sin(alpha),2)*power(sin(gamma),2) - r2*power(omz,2)*power(sin(alpha),2)*power(sin(gamma),2) + ...
       4*omy*omz*r2*sqrt2*cos(gamma)*power(sin(beta),2)*sin(alpha) + power(cos(beta),2)*...
        ((ddr2 - r2*(power(omx,2) + power(omy,2)))*power(cos(gamma),2) - 4*omy*omz*r2*sqrt2*cos(gamma)*sin(alpha) - ...
          8*sin(alpha)*(-2*omx*omy*r2*cos(alpha) + (-ddr2 + r2*(power(omx,2) + power(omz,2)))*sin(alpha))) + omx*omy*r2*power(cos(gamma),2)*power(sin(beta),2)*sin(2*alpha) + ...
       3*omdx*R*cos(gamma)*sin(alpha)*sin(beta) - 8*omy*omz*r2*sin(alpha)*sin(2*beta) + omy*omz*r2*power(cos(gamma),2)*sin(alpha)*sin(2*beta) - 3*omdy*R*sin(alpha)*sin(gamma) + ...
       4*omx*omz*r2*sqrt2*sin(alpha)*sin(beta)*sin(gamma) + power(cos(alpha),2)*(8*(ddr2 - r2*(power(omy,2) + power(omz,2)))*power(cos(beta),2) + ...
          (ddr2 - r2*(power(omy,2) + power(omz,2)))*power(cos(gamma),2)*power(sin(beta),2) + (ddr2 - r2*(power(omx,2) + power(omz,2)))*power(sin(gamma),2) - ...
          2*omx*omy*r2*cos(gamma)*sin(beta)*sin(gamma) + 4*sqrt2*cos(beta)*(-(cos(gamma)*(ddr2 - r2*(power(omy,2) + power(omz,2)))*sin(beta)) + omx*omy*r2*sin(gamma))) + ...
       omx*omy*r2*power(sin(alpha),2)*sin(beta)*sin(2*gamma) + cos(alpha)*(-4*omx*omz*r2*sqrt2*cos(gamma)*power(cos(beta),2) - 2*omx*omy*r2*power(sin(gamma),2)*sin(alpha) - 8*omx*omz*r2*sin(2*beta) + ...
          omx*omz*r2*power(cos(gamma),2)*sin(2*beta) - 3*omdx*R*sin(gamma) - 4*omy*omz*r2*sqrt2*sin(beta)*sin(gamma) + ...
          cos(gamma)*sin(beta)*(-3*omdy*R + 4*omx*omz*r2*sqrt2*sin(beta) - 2*r2*power(omy,2)*sin(alpha)*sin(gamma)) + ...
          cos(beta)*(-2*omy*r2*cos(gamma)*(4*omx*sqrt2*sin(alpha)*sin(beta) + omz*sin(gamma)) + 2*sqrt2*(3*omdy*R - 2*r2*(power(omx,2) - power(omy,2))*sin(alpha)*sin(gamma))) + ...
          r2*power(omx,2)*sin(alpha)*sin(beta)*sin(2*gamma)) + cos(beta)*(4*sqrt2*cos(gamma)*(ddr2 - r2*(power(omx,2) + power(omy,2)))*sin(beta) - ...
          4*sqrt2*power(sin(alpha),2)*(cos(gamma)*(ddr2 - r2*(power(omx,2) + power(omz,2)))*sin(beta) + omx*omy*r2*sin(gamma)) + sin(alpha)*(-6*omdx*R*sqrt2 + omx*omz*r2*sin(2*gamma)))))/9.;

Fout(3) = (m*((-3*omdy*R + ddr3*sqrt6*cos(gamma)*sin(alpha) - r3*sqrt6*cos(gamma)*power(omy,2)*sin(alpha) - r3*sqrt6*cos(gamma)*power(omz,2)*sin(alpha) - 2*dr3*omy*sqrt2*sin(beta) - omdy*r3*sqrt2*sin(beta) - ...
          omx*omz*r3*sqrt2*sin(beta) - 2*dr3*omz*cos(gamma)*sin(alpha)*sin(beta) - omdz*r3*cos(gamma)*sin(alpha)*sin(beta) + omx*omy*r3*cos(gamma)*sin(alpha)*sin(beta) + ddr3*sin(alpha)*sin(gamma) - ...
          r3*power(omy,2)*sin(alpha)*sin(gamma) - r3*power(omz,2)*sin(alpha)*sin(gamma) + 2*dr3*omz*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + omdz*r3*sqrt6*sin(alpha)*sin(beta)*sin(gamma) - ...
          omx*omy*r3*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + cos(alpha)*(sqrt2*cos(beta)*(ddr3 - r3*(power(omy,2) + power(omz,2))) + ...
             cos(gamma)*((2*dr3*omz + (omdz - omx*omy)*r3)*sqrt6 + (ddr3 - r3*(power(omy,2) + power(omz,2)))*sin(beta)) + ...
             (2*dr3*omz + omdz*r3 - omx*omy*r3 - sqrt6*(ddr3 - r3*(power(omy,2) + power(omz,2)))*sin(beta))*sin(gamma)) + ...
          cos(beta)*((2*dr3*omy + (omdy + omx*omz)*r3)*cos(gamma) - sqrt2*((2*dr3*omz + omdz*r3 - omx*omy*r3)*sin(alpha) + (2*dr3*omy + omdy*r3 + omx*omz*r3)*sqrt3*sin(gamma))))*...
        (sin(alpha)*(sqrt6*cos(gamma) + sin(gamma)) + cos(alpha)*(sqrt2*cos(beta) + sin(beta)*(cos(gamma) - sqrt6*sin(gamma)))) - ...
       (3*omdx*R + 2*dr3*omz*sqrt6*cos(gamma)*sin(alpha) + omdz*r3*sqrt6*cos(gamma)*sin(alpha) + omx*omy*r3*sqrt6*cos(gamma)*sin(alpha) + 2*dr3*omx*sqrt2*sin(beta) + omdx*r3*sqrt2*sin(beta) - ...
          omy*omz*r3*sqrt2*sin(beta) + ddr3*cos(gamma)*sin(alpha)*sin(beta) - r3*cos(gamma)*power(omx,2)*sin(alpha)*sin(beta) - r3*cos(gamma)*power(omz,2)*sin(alpha)*sin(beta) + ...
          2*dr3*omz*sin(alpha)*sin(gamma) + omdz*r3*sin(alpha)*sin(gamma) + omx*omy*r3*sin(alpha)*sin(gamma) - ddr3*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + ...
          r3*sqrt6*power(omx,2)*sin(alpha)*sin(beta)*sin(gamma) + r3*sqrt6*power(omz,2)*sin(alpha)*sin(beta)*sin(gamma) + ...
          cos(alpha)*((2*dr3*omz + (omdz + omx*omy)*r3)*sqrt2*cos(beta) + cos(gamma)*(sqrt6*(-ddr3 + r3*(power(omx,2) + power(omz,2))) + (2*dr3*omz + (omdz + omx*omy)*r3)*sin(beta)) - ...
             (ddr3 - r3*(power(omx,2) + power(omz,2)) + (2*dr3*omz + (omdz + omx*omy)*r3)*sqrt6*sin(beta))*sin(gamma)) + ...
          cos(beta)*((-2*dr3*omx - omdx*r3 + omy*omz*r3)*cos(gamma) + sqrt2*((ddr3 - r3*(power(omx,2) + power(omz,2)))*sin(alpha) + (2*dr3*omx + (omdx - omy*omz)*r3)*sqrt3*sin(gamma))))*...
        (cos(alpha)*(sqrt6*cos(gamma) + sin(gamma)) - sin(alpha)*(sqrt2*cos(beta) + sin(beta)*(cos(gamma) - sqrt6*sin(gamma)))) - ...
       (-(sqrt2*sin(beta)) + cos(beta)*(cos(gamma) - sqrt6*sin(gamma)))*(2*dr3*omy*sqrt6*cos(gamma)*sin(alpha) + omdy*r3*sqrt6*cos(gamma)*sin(alpha) - omx*omz*r3*sqrt6*cos(gamma)*sin(alpha) + ...
          ddr3*sqrt2*sin(beta) - r3*sqrt2*power(omx,2)*sin(beta) - r3*sqrt2*power(omy,2)*sin(beta) - 2*dr3*omx*cos(gamma)*sin(alpha)*sin(beta) - omdx*r3*cos(gamma)*sin(alpha)*sin(beta) - ...
          omy*omz*r3*cos(gamma)*sin(alpha)*sin(beta) + 2*dr3*omy*sin(alpha)*sin(gamma) + omdy*r3*sin(alpha)*sin(gamma) - omx*omz*r3*sin(alpha)*sin(gamma) + ...
          2*dr3*omx*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + omdx*r3*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + omy*omz*r3*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + ...
          cos(alpha)*((2*dr3*omy + (omdy - omx*omz)*r3)*sqrt2*cos(beta) + cos(gamma)*((2*dr3*omx + omdx*r3 + omy*omz*r3)*sqrt6 + (2*dr3*omy + omdy*r3 - omx*omz*r3)*sin(beta)) + ...
             (2*dr3*omx + omdx*r3 + omy*omz*r3 - (2*dr3*omy + omdy*r3 - omx*omz*r3)*sqrt6*sin(beta))*sin(gamma)) - ...
          cos(beta)*(cos(gamma)*(ddr3 - r3*(power(omx,2) + power(omy,2))) + sqrt2*((2*dr3*omx + (omdx + omy*omz)*r3)*sin(alpha) + sqrt3*(-ddr3 + r3*(power(omx,2) + power(omy,2)))*sin(gamma))))))/9.;

Fout(4) = (m*((-3*omdy*R - ddr4*sqrt6*cos(gamma)*sin(alpha) + r4*sqrt6*cos(gamma)*power(omy,2)*sin(alpha) + r4*sqrt6*cos(gamma)*power(omz,2)*sin(alpha) - 2*dr4*omy*sqrt2*sin(beta) - omdy*r4*sqrt2*sin(beta) - ...
          omx*omz*r4*sqrt2*sin(beta) - 2*dr4*omz*cos(gamma)*sin(alpha)*sin(beta) - omdz*r4*cos(gamma)*sin(alpha)*sin(beta) + omx*omy*r4*cos(gamma)*sin(alpha)*sin(beta) + ddr4*sin(alpha)*sin(gamma) - ...
          r4*power(omy,2)*sin(alpha)*sin(gamma) - r4*power(omz,2)*sin(alpha)*sin(gamma) - 2*dr4*omz*sqrt6*sin(alpha)*sin(beta)*sin(gamma) - omdz*r4*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + ...
          omx*omy*r4*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + cos(alpha)*(sqrt2*cos(beta)*(ddr4 - r4*(power(omy,2) + power(omz,2))) - ...
             cos(gamma)*((2*dr4*omz + (omdz - omx*omy)*r4)*sqrt6 + (-ddr4 + r4*(power(omy,2) + power(omz,2)))*sin(beta)) + ...
             (2*dr4*omz + omdz*r4 - omx*omy*r4 + sqrt6*(ddr4 - r4*(power(omy,2) + power(omz,2)))*sin(beta))*sin(gamma)) + ...
          cos(beta)*((2*dr4*omy + (omdy + omx*omz)*r4)*cos(gamma) + sqrt2*((-2*dr4*omz - omdz*r4 + omx*omy*r4)*sin(alpha) + (2*dr4*omy + omdy*r4 + omx*omz*r4)*sqrt3*sin(gamma))))*...
        (sin(alpha)*(-(sqrt6*cos(gamma)) + sin(gamma)) + cos(alpha)*(sqrt2*cos(beta) + sin(beta)*(cos(gamma) + sqrt6*sin(gamma)))) - ...
       (-3*omdx*R + 2*dr4*omz*sqrt6*cos(gamma)*sin(alpha) + omdz*r4*sqrt6*cos(gamma)*sin(alpha) + omx*omy*r4*sqrt6*cos(gamma)*sin(alpha) - 2*dr4*omx*sqrt2*sin(beta) - omdx*r4*sqrt2*sin(beta) + ...
          omy*omz*r4*sqrt2*sin(beta) - ddr4*cos(gamma)*sin(alpha)*sin(beta) + r4*cos(gamma)*power(omx,2)*sin(alpha)*sin(beta) + r4*cos(gamma)*power(omz,2)*sin(alpha)*sin(beta) - ...
          2*dr4*omz*sin(alpha)*sin(gamma) - omdz*r4*sin(alpha)*sin(gamma) - omx*omy*r4*sin(alpha)*sin(gamma) - ddr4*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + ...
          r4*sqrt6*power(omx,2)*sin(alpha)*sin(beta)*sin(gamma) + r4*sqrt6*power(omz,2)*sin(alpha)*sin(beta)*sin(gamma) - ...
          cos(alpha)*((2*dr4*omz + (omdz + omx*omy)*r4)*sqrt2*cos(beta) + cos(gamma)*(sqrt6*(ddr4 - r4*(power(omx,2) + power(omz,2))) + (2*dr4*omz + (omdz + omx*omy)*r4)*sin(beta)) + ...
             (-ddr4 + r4*(power(omx,2) + power(omz,2)) + (2*dr4*omz + (omdz + omx*omy)*r4)*sqrt6*sin(beta))*sin(gamma)) + ...
          cos(beta)*((2*dr4*omx + (omdx - omy*omz)*r4)*cos(gamma) + sqrt2*((-ddr4 + r4*(power(omx,2) + power(omz,2)))*sin(alpha) + (2*dr4*omx + (omdx - omy*omz)*r4)*sqrt3*sin(gamma))))*...
        (cos(alpha)*(sqrt6*cos(gamma) - sin(gamma)) + sin(alpha)*(sqrt2*cos(beta) + sin(beta)*(cos(gamma) + sqrt6*sin(gamma)))) - ...
       (-(sqrt2*sin(beta)) + cos(beta)*(cos(gamma) + sqrt6*sin(gamma)))*(-2*dr4*omy*sqrt6*cos(gamma)*sin(alpha) - omdy*r4*sqrt6*cos(gamma)*sin(alpha) + omx*omz*r4*sqrt6*cos(gamma)*sin(alpha) + ...
          ddr4*sqrt2*sin(beta) - r4*sqrt2*power(omx,2)*sin(beta) - r4*sqrt2*power(omy,2)*sin(beta) - 2*dr4*omx*cos(gamma)*sin(alpha)*sin(beta) - omdx*r4*cos(gamma)*sin(alpha)*sin(beta) - ...
          omy*omz*r4*cos(gamma)*sin(alpha)*sin(beta) + 2*dr4*omy*sin(alpha)*sin(gamma) + omdy*r4*sin(alpha)*sin(gamma) - omx*omz*r4*sin(alpha)*sin(gamma) - ...
          2*dr4*omx*sqrt6*sin(alpha)*sin(beta)*sin(gamma) - omdx*r4*sqrt6*sin(alpha)*sin(beta)*sin(gamma) - omy*omz*r4*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + ...
          cos(alpha)*((2*dr4*omy + (omdy - omx*omz)*r4)*sqrt2*cos(beta) - cos(gamma)*((2*dr4*omx + omdx*r4 + omy*omz*r4)*sqrt6 + (-2*dr4*omy - omdy*r4 + omx*omz*r4)*sin(beta)) + ...
             (2*dr4*omx + omdx*r4 + omy*omz*r4 + (2*dr4*omy + omdy*r4 - omx*omz*r4)*sqrt6*sin(beta))*sin(gamma)) + ...
          cos(beta)*(cos(gamma)*(-ddr4 + r4*(power(omx,2) + power(omy,2))) - sqrt2*((2*dr4*omx + (omdx + omy*omz)*r4)*sin(alpha) + sqrt3*(ddr4 - r4*(power(omx,2) + power(omy,2)))*sin(gamma))))))/9.;

end