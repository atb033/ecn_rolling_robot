function Fout = inertia_moment_sphere( q, ~ , ddq, data)

% 3 constraint equations of the model

m = data.m;
R = data.R;

Ixx = data.Ixx;
Iyy = data.Iyy;
Izz = data.Izz;

r1 = q(1);
r2 = q(2);
r3 = q(3);
r4 = q(4);
alpha = q(5);
beta = q(6);
gamma = q(7);

ddr1 = ddq(1);
ddr2 = ddq(2);
ddr3 = ddq(3);
ddr4 = ddq(4);
omdx = ddq(5);
omdy = ddq(6);
omdz = ddq(7);

sqrt2 = sqrt(2);
sqrt3 = sqrt(3);
sqrt6 = sqrt(6);


Fout = zeros(3,4);

Fout(:,1) = [omdx*power(R,2) + omdx*power(r1,2)*power(cos(beta),2)*power(cos(gamma),2) + omdx*power(r1,2)*power(cos(gamma),2)*power(sin(alpha),2)*power(sin(beta),2) - ddr1*R*cos(gamma)*sin(alpha)*sin(beta) - ...
    omdz*R*r1*sin(alpha)*sin(gamma) - omdy*cos(gamma)*power(r1,2)*power(sin(alpha),2)*sin(beta)*sin(gamma) + power(r1,2)*power(cos(alpha),2)*sin(gamma)*(omdy*cos(gamma)*sin(beta) + omdx*sin(gamma)) - ...
    r1*cos(beta)*cos(gamma)*(-2*omdx*R + omdz*r1*cos(alpha)*cos(gamma)*sin(beta) + omdz*r1*sin(alpha)*sin(gamma)) + ...
    cos(alpha)*(-(omdy*power(r1,2)*power(cos(gamma),2)*power(sin(beta),2)*sin(alpha)) - r1*cos(gamma)*sin(beta)*(omdz*R + 2*omdx*r1*sin(alpha)*sin(gamma)) + ...
       sin(gamma)*(ddr1*R + omdy*power(r1,2)*sin(alpha)*sin(gamma))),omdy*power(R,2) + omdy*power(r1,2)*power(cos(beta),2)*power(cos(gamma),2) + ...
    omdy*power(r1,2)*power(sin(alpha),2)*power(sin(gamma),2) - omdz*R*r1*cos(gamma)*sin(alpha)*sin(beta) + ddr1*R*sin(alpha)*sin(gamma) - ...
    omdx*cos(gamma)*power(r1,2)*power(sin(alpha),2)*sin(beta)*sin(gamma) + cos(gamma)*power(r1,2)*power(cos(alpha),2)*sin(beta)*(omdy*cos(gamma)*sin(beta) + omdx*sin(gamma)) + ...
    r1*cos(beta)*cos(gamma)*(2*omdy*R - omdz*r1*cos(gamma)*sin(alpha)*sin(beta) + omdz*r1*cos(alpha)*sin(gamma)) + ...
    cos(alpha)*(-(omdx*power(r1,2)*power(cos(gamma),2)*power(sin(beta),2)*sin(alpha)) + ddr1*R*cos(gamma)*sin(beta) + ...
       r1*(omdx*r1*power(sin(gamma),2)*sin(alpha) + omdz*R*sin(gamma) + omdy*r1*sin(alpha)*sin(beta)*sin(2*gamma))),...
   r1*(omdz*r1*power(cos(alpha),2)*(power(cos(gamma),2)*power(sin(beta),2) + power(sin(gamma),2)) - cos(alpha)*(R + r1*cos(beta)*cos(gamma))*(omdx*cos(gamma)*sin(beta) - omdy*sin(gamma)) + ...
      sin(alpha)*(r1*power(cos(gamma),2)*sin(beta)*(-(omdy*cos(beta)) + omdz*sin(alpha)*sin(beta)) - cos(gamma)*(omdy*R*sin(beta) + omdx*r1*cos(beta)*sin(gamma)) + ...
         sin(gamma)*(-(omdx*R) + omdz*r1*sin(alpha)*sin(gamma))))]';

Fout(:,2) = [(-(power(r2,2)*power(cos(beta),2)*(-9*omdx + 8*omdx*cos(2*alpha) - omdx*cos(2*gamma) + 8*omdy*sin(2*alpha))) - ...
      2*cos(beta)*(r2*cos(gamma)*(6*omdx*R + omdz*r2*sin(alpha)*sin(gamma)) - 2*sqrt2*sin(alpha)*(-3*ddr2*R + omdy*power(r2,2)*sin(alpha)*sin(gamma))) - ...
      cos(alpha)*(-4*omdz*sqrt2*cos(gamma)*power(r2,2)*power(cos(beta),2) + 2*omdy*power(r2,2)*power(cos(gamma),2)*power(sin(beta),2)*sin(alpha) + 6*ddr2*R*sin(gamma) + ...
         2*r2*cos(gamma)*sin(beta)*(-3*omdz*R + 2*omdz*r2*sqrt2*sin(beta) + 2*omdx*r2*sin(alpha)*sin(gamma)) + ...
         r2*cos(beta)*(omdz*r2*(-15 + cos(2*gamma))*sin(beta) + 4*sqrt2*(3*omdz*R - 2*omdx*r2*sin(alpha)*sin(gamma)))) + ...
      2*(9*omdx*power(R,2) + omdx*power(r2,2)*(8 + power(cos(gamma),2)*power(sin(alpha),2))*power(sin(beta),2) + omdy*cos(alpha)*power(r2,2)*power(sin(gamma),2)*sin(alpha) + ...
         omdy*sqrt2*cos(gamma)*power(r2,2)*sin(2*alpha)*sin(2*beta) + 3*omdz*R*r2*sin(alpha)*sin(gamma) - ...
         sin(beta)*(2*r2*sqrt2*(6*omdx*R + omdz*r2*sin(alpha)*sin(gamma)) + cos(gamma)*sin(alpha)*(-3*ddr2*R + omdy*power(r2,2)*sin(alpha)*sin(gamma)))) + ...
      power(r2,2)*power(cos(alpha),2)*(2*omdx*power(sin(gamma),2) + 4*sqrt2*cos(beta)*(2*omdx*cos(gamma)*sin(beta) - omdy*sin(gamma)) + omdy*sin(beta)*sin(2*gamma)))/18.,...
   (9*omdy*power(R,2) + 8*omdy*power(r2,2)*power(sin(beta),2) + omdy*power(r2,2)*power(sin(alpha),2)*power(sin(gamma),2) - 2*omdz*sqrt2*cos(gamma)*power(r2,2)*power(sin(beta),2)*sin(alpha) + ...
      cos(gamma)*power(r2,2)*power(cos(beta),2)*(omdy*cos(gamma) + 2*omdz*sqrt2*sin(alpha)) - 12*omdy*R*r2*sqrt2*sin(beta) + 3*omdz*R*r2*cos(gamma)*sin(alpha)*sin(beta) + ...
      omdx*sqrt2*cos(gamma)*power(r2,2)*sin(2*alpha)*sin(2*beta) - 3*ddr2*R*sin(alpha)*sin(gamma) - omdx*cos(gamma)*power(r2,2)*power(sin(alpha),2)*sin(beta)*sin(gamma) + ...
      power(r2,2)*power(cos(alpha),2)*(8*omdy*power(cos(beta),2) + cos(gamma)*sin(beta)*(omdy*cos(gamma)*sin(beta) + omdx*sin(gamma)) - ...
         2*sqrt2*cos(beta)*(2*omdy*cos(gamma)*sin(beta) + omdx*sin(gamma))) + r2*cos(beta)*...
       (-(omdz*r2*power(cos(gamma),2)*sin(alpha)*sin(beta)) + cos(gamma)*(-6*omdy*R + 4*omdy*r2*sqrt2*sin(beta)) + ...
         2*sin(alpha)*(4*omdz*r2*sin(beta) + sqrt2*(-3*omdz*R + omdx*r2*sin(alpha)*sin(gamma)))) + ...
      cos(alpha)*(-8*omdx*power(r2,2)*power(cos(beta),2)*sin(alpha) - omdx*power(r2,2)*power(cos(gamma),2)*power(sin(beta),2)*sin(alpha) - 3*ddr2*R*cos(gamma)*sin(beta) + ...
         cos(beta)*(omdz*cos(gamma)*power(r2,2)*sin(gamma) + 2*sqrt2*(3*ddr2*R - 2*omdy*power(r2,2)*sin(alpha)*sin(gamma))) + ...
         r2*(omdx*r2*power(sin(gamma),2)*sin(alpha) - 3*omdz*R*sin(gamma) + 2*omdz*r2*sqrt2*sin(beta)*sin(gamma) + omdy*r2*sin(alpha)*sin(beta)*sin(2*gamma))))/9.,...
   (r2*(omdz*r2*power(cos(alpha),2)*(8*power(cos(beta),2) + power(cos(gamma),2)*power(sin(beta),2) + power(sin(gamma),2) - 4*sqrt2*cos(beta)*cos(gamma)*sin(beta)) + ...
        cos(alpha)*(2*omdx*r2*sqrt2*cos(gamma)*power(cos(beta),2) + (3*R - 2*r2*sqrt2*sin(beta))*(omdx*cos(gamma)*sin(beta) - omdy*sin(gamma)) + ...
           cos(beta)*(-6*omdx*R*sqrt2 - (omdx*r2*(-15 + cos(2*gamma))*sin(beta))/2. + omdy*r2*cos(gamma)*sin(gamma))) + ...
        sin(alpha)*(omdz*r2*power(cos(gamma),2)*power(sin(beta),2)*sin(alpha) + 2*r2*power(cos(beta),2)*(omdy*sqrt2*cos(gamma) + 4*omdz*sin(alpha)) - ...
           omdy*cos(gamma)*sin(beta)*(-3*R + 2*r2*sqrt2*sin(beta)) - cos(beta)*(6*omdy*R*sqrt2 + r2*(-8*omdy + omdy*power(cos(gamma),2) + 4*omdz*sqrt2*cos(gamma)*sin(alpha))*sin(beta) + ...
              omdx*r2*cos(gamma)*sin(gamma)) + sin(gamma)*(3*omdx*R - 2*omdx*r2*sqrt2*sin(beta) + omdz*r2*sin(alpha)*sin(gamma)))))/9.]';

Fout(:,3) = [(9*omdx*power(R,2) + 2*omdx*power(r3,2)*power(sin(beta),2) + omdx*power(r3,2)*power(cos(gamma),2)*power(sin(alpha),2)*power(sin(beta),2) + ...
      6*omdx*power(r3,2)*power(sin(alpha),2)*power(sin(beta),2)*power(sin(gamma),2) + 3*omdz*R*r3*sqrt6*cos(gamma)*sin(alpha) + 6*omdx*R*r3*sqrt2*sin(beta) - ...
      omdy*sqrt6*power(r3,2)*power(cos(gamma),2)*power(sin(alpha),2)*sin(beta) + omdy*sqrt6*power(r3,2)*power(sin(alpha),2)*power(sin(gamma),2)*sin(beta) + 3*ddr3*R*cos(gamma)*sin(alpha)*sin(beta) + ...
      2*omdz*sqrt3*cos(gamma)*power(r3,2)*sin(alpha)*sin(beta) + omdx*sqrt6*power(r3,2)*power(sin(gamma),2)*sin(2*alpha)*sin(beta) + omdx*sqrt2*cos(gamma)*power(r3,2)*power(sin(alpha),2)*sin(2*beta) - ...
      2*omdx*sqrt6*cos(gamma)*power(r3,2)*power(sin(alpha),2)*power(sin(beta),2)*sin(gamma) + 3*omdz*R*r3*sin(alpha)*sin(gamma) + ...
      5*omdy*cos(gamma)*power(r3,2)*power(sin(alpha),2)*sin(beta)*sin(gamma) - 3*ddr3*R*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + omdz*sqrt2*power(r3,2)*sin(alpha)*sin(beta)*sin(gamma) + ...
      omdy*sqrt3*power(r3,2)*sin(2*alpha)*sin(2*beta)*sin(gamma) - cos(beta)*(omdz*sqrt6*power(r3,2)*power(cos(gamma),2)*sin(alpha) - ...
         (3*ddr3*R*sqrt2 + omdz*sqrt6*power(r3,2)*power(sin(gamma),2))*sin(alpha) - 2*omdx*r3*sqrt3*(3*R*sqrt2 + 2*r3*sin(beta))*sin(gamma) + ...
         power(r3,2)*power(sin(alpha),2)*(omdy*sqrt2 + 4*omdx*sqrt3*sin(beta))*sin(gamma) + ...
         r3*cos(gamma)*(6*omdx*R + 2*omdy*r3*sqrt3*power(sin(alpha),2) + 2*omdx*r3*sqrt2*sin(beta) - 5*omdz*r3*sin(alpha)*sin(gamma))) - ...
      (omdx*power(r3,2)*power(cos(beta),2)*(-9 + 2*cos(2*alpha) + 5*cos(2*gamma) + 2*sqrt6*sin(2*gamma)))/2. + ...
      power(r3,2)*power(cos(alpha),2)*(omdx*power(sin(gamma),2) - omdy*sqrt6*power(sin(gamma),2)*sin(beta) + power(cos(gamma),2)*(6*omdx + omdy*sqrt6*sin(beta)) - ...
         5*omdy*cos(gamma)*sin(beta)*sin(gamma) + omdy*cos(beta)*(2*sqrt3*cos(gamma) + sqrt2*sin(gamma)) + omdx*sqrt6*sin(2*gamma)) + ...
      (cos(alpha)*(power(r3,2)*power(cos(gamma),2)*sin(alpha)*(11*omdy + omdy*cos(2*beta) - 4*omdx*sqrt6*sin(beta)) - ...
           2*power(r3,2)*power(cos(beta),2)*(omdz*sqrt2*cos(gamma) + 2*omdy*sin(alpha) - 2*omdz*sqrt3*sin(gamma)) + ...
           cos(gamma)*(-6*ddr3*R*sqrt6 + 2*omdz*sqrt2*power(r3,2)*power(sin(beta),2) + 2*omdz*r3*sin(beta)*(3*R + 2*r3*sqrt6*cos(beta)*sin(gamma))) - ...
           2*r3*cos(beta)*(omdz*r3*power(cos(gamma),2)*sin(beta) + 2*r3*cos(gamma)*sin(alpha)*(2*omdx*sqrt3 + omdy*sqrt2*sin(beta)) + sqrt2*(-3*omdz*R + 2*omdx*r3*sin(alpha)*sin(gamma))) + ...
           2*(power(r3,2)*power(sin(gamma),2)*(omdy*(-2 + 3*cos(2*beta))*sin(alpha) - 6*omdz*cos(beta)*sin(beta)) + omdz*power(r3,2)*sin(2*beta) - ...
              (3*ddr3*R + 2*omdz*sqrt3*power(r3,2)*power(sin(beta),2) + 3*omdz*R*r3*sqrt6*sin(beta))*sin(gamma) + ...
              power(r3,2)*sin(alpha)*(omdy*sqrt6 + omdy*sqrt6*power(sin(beta),2) + 5*omdx*sin(beta))*sin(2*gamma))))/2.)/9.,...
   (9*omdy*power(R,2) + 6*omdy*power(r3,2)*power(cos(gamma),2)*power(sin(alpha),2) + 2*omdy*power(r3,2)*power(sin(beta),2) + omdy*power(r3,2)*power(sin(alpha),2)*power(sin(gamma),2) - ...
      3*ddr3*R*sqrt6*cos(gamma)*sin(alpha) + omdz*sqrt2*cos(gamma)*power(r3,2)*power(sin(beta),2)*sin(alpha) + 6*omdy*R*r3*sqrt2*sin(beta) - ...
      omdx*sqrt6*power(r3,2)*power(cos(gamma),2)*power(sin(alpha),2)*sin(beta) + omdx*sqrt6*power(r3,2)*power(sin(alpha),2)*power(sin(gamma),2)*sin(beta) + ...
      3*omdz*R*r3*cos(gamma)*sin(alpha)*sin(beta) + omdy*sqrt6*power(r3,2)*power(cos(gamma),2)*sin(2*alpha)*sin(beta) + omdz*power(r3,2)*sin(alpha)*sin(2*beta) - 3*ddr3*R*sin(alpha)*sin(gamma) - ...
      2*omdz*sqrt3*power(r3,2)*power(sin(beta),2)*sin(alpha)*sin(gamma) + 5*omdx*cos(gamma)*power(r3,2)*power(sin(alpha),2)*sin(beta)*sin(gamma) - 3*omdz*R*r3*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + ...
      omdx*sqrt3*power(r3,2)*sin(2*alpha)*sin(2*beta)*sin(gamma) + power(r3,2)*power(cos(beta),2)*...
       (omdy*power(cos(gamma),2) + 2*sin(gamma)*(omdz*sqrt3*sin(alpha) + 3*omdy*sin(gamma)) - sqrt2*cos(gamma)*(omdz*sin(alpha) + 2*omdy*sqrt3*sin(gamma))) - ...
      r3*cos(beta)*(omdz*r3*power(cos(gamma),2)*sin(alpha)*sin(beta) + sin(alpha)*(-3*omdz*R*sqrt2 + 6*omdz*r3*power(sin(gamma),2)*sin(beta)) + omdx*r3*sqrt2*power(sin(alpha),2)*sin(gamma) - ...
         omdy*(6*R*sqrt6 + r3*sqrt2*sin(2*alpha) + 4*r3*sqrt3*sin(beta))*sin(gamma) + ...
         2*cos(gamma)*(3*omdy*R + omdx*r3*sqrt3*power(sin(alpha),2) + omdy*r3*sqrt2*sin(beta) - omdz*r3*sqrt6*sin(alpha)*sin(beta)*sin(gamma))) + ...
      power(r3,2)*power(cos(alpha),2)*(2*omdy*power(cos(beta),2) + power(cos(gamma),2)*sin(beta)*(omdx*sqrt6 + omdy*sin(beta)) + power(sin(gamma),2)*sin(beta)*(-(omdx*sqrt6) + 6*omdy*sin(beta)) + ...
         cos(beta)*(2*omdx*sqrt3*cos(gamma) + (omdx*sqrt2 - 4*omdy*sqrt3*sin(beta))*sin(gamma)) + cos(gamma)*(omdy*sqrt2*sin(2*beta) - sin(beta)*(5*omdx + 2*omdy*sqrt6*sin(beta))*sin(gamma))) + ...
      omdy*sqrt6*power(r3,2)*power(sin(alpha),2)*sin(2*gamma) - (cos(alpha)*(4*omdx*power(r3,2)*power(cos(beta),2)*sin(alpha) - omdx*(11 + cos(2*beta))*power(r3,2)*power(cos(gamma),2)*sin(alpha) + ...
           2*cos(gamma)*((3*ddr3*R + 2*omdz*sqrt3*power(r3,2))*sin(beta) - 2*omdx*sqrt6*power(r3,2)*power(sin(beta),2)*sin(alpha)*sin(gamma) + ...
              r3*sqrt2*(3*omdz*R*sqrt3 + omdx*r3*sin(alpha)*(sin(2*beta) - 2*sqrt3*sin(gamma)))) + ...
           cos(beta)*(6*ddr3*R*sqrt2 - 2*omdz*sqrt6*power(r3,2)*power(cos(gamma),2) + 2*omdz*sqrt6*power(r3,2)*power(sin(gamma),2) - 8*omdy*sqrt3*cos(gamma)*power(r3,2)*sin(alpha) + ...
              5*omdz*power(r3,2)*sin(2*gamma)) + 2*(-(power(r3,2)*power(sin(gamma),2)*sin(alpha)*(3*omdx*cos(2*beta) - 2*(omdx + omdy*sqrt6*sin(beta)))) + ...
              (3*omdz*R*r3 + (-3*ddr3*R*sqrt6 + omdz*sqrt2*power(r3,2))*sin(beta))*sin(gamma) + 5*omdy*power(r3,2)*sin(alpha)*sin(beta)*sin(2*gamma))))/2.)/9.,...
   (r3*(25*omdz*r3 + 5*omdz*r3*power(cos(gamma),2) + 3*omdz*r3*power(sin(beta),2) - 5*omdz*r3*power(cos(gamma),2)*power(sin(beta),2) - 5*omdz*r3*power(sin(gamma),2) + ...
        5*omdz*r3*power(sin(beta),2)*power(sin(gamma),2) + 12*omdx*R*sqrt6*cos(gamma)*sin(alpha) + 4*omdy*r3*sqrt2*cos(gamma)*power(sin(beta),2)*sin(alpha) + ...
        12*omdy*R*cos(gamma)*sin(alpha)*sin(beta) + 8*omdx*r3*sqrt3*cos(gamma)*sin(alpha)*sin(beta) + 5*omdy*r3*power(cos(gamma),2)*sin(alpha)*sin(2*beta) - ...
        5*omdy*r3*power(sin(gamma),2)*sin(alpha)*sin(2*beta) + 4*omdz*r3*sqrt6*cos(gamma)*sin(gamma) - 4*omdz*r3*sqrt6*cos(gamma)*power(sin(beta),2)*sin(gamma) + 12*omdx*R*sin(alpha)*sin(gamma) - ...
        8*omdy*r3*sqrt3*power(sin(beta),2)*sin(alpha)*sin(gamma) + 4*omdx*r3*sqrt2*sin(alpha)*sin(beta)*sin(gamma) - 12*omdy*R*sqrt6*sin(alpha)*sin(beta)*sin(gamma) - ...
        8*omdz*r3*sqrt3*sin(2*beta)*sin(gamma) + r3*power(cos(beta),2)*(5*omdz*power(cos(gamma),2) - omdz*(3 + 5*power(sin(gamma),2)) + 8*omdy*sqrt3*sin(alpha)*sin(gamma) + ...
           4*sqrt2*cos(gamma)*(-(omdy*sin(alpha)) + omdz*sqrt3*sin(gamma))) + 2*cos(beta)*...
         (4*omdz*r3*sqrt2*cos(gamma)*sin(beta) + sin(alpha)*(6*omdy*R*sqrt2 - 2*omdx*r3*sqrt6*power(cos(gamma),2) + 2*omdx*r3*sqrt6*power(sin(gamma),2) - 3*omdy*r3*sin(beta) + ...
              4*omdy*r3*sqrt6*cos(gamma)*sin(beta)*sin(gamma) + 5*omdx*r3*sin(2*gamma))) + ...
        2*cos(alpha)*(cos(gamma)*(-6*omdy*R*sqrt6 + 2*omdx*r3*sqrt2*power(sin(beta),2) + 6*omdx*R*sin(beta) - 4*omdy*r3*sqrt3*sin(beta)) - 6*omdy*R*sin(gamma) - ...
           4*omdx*r3*sqrt3*power(sin(beta),2)*sin(gamma) - 2*omdy*r3*sqrt2*sin(beta)*sin(gamma) - 6*omdx*R*sqrt6*sin(beta)*sin(gamma) - ...
           2*omdx*r3*power(cos(beta),2)*(sqrt2*cos(gamma) - 2*sqrt3*sin(gamma)) + omdx*r3*sqrt6*sin(2*beta)*sin(2*gamma) + ...
           cos(beta)*(6*omdx*R*sqrt2 - 3*omdx*r3*sin(beta) + r3*cos(2*gamma)*(2*omdy*sqrt6 + 5*omdx*sin(beta)) - 5*omdy*r3*sin(2*gamma)))))/36.]';

Fout(:,4) = [(9*omdx*power(R,2) + 2*omdx*power(r4,2)*power(sin(beta),2) + omdx*power(r4,2)*power(cos(gamma),2)*power(sin(alpha),2)*power(sin(beta),2) + ...
      6*omdx*power(r4,2)*power(sin(alpha),2)*power(sin(beta),2)*power(sin(gamma),2) - 3*omdz*R*r4*sqrt6*cos(gamma)*sin(alpha) + 6*omdx*R*r4*sqrt2*sin(beta) + ...
      omdy*sqrt6*power(r4,2)*power(cos(gamma),2)*power(sin(alpha),2)*sin(beta) - omdy*sqrt6*power(r4,2)*power(sin(alpha),2)*power(sin(gamma),2)*sin(beta) + 3*ddr4*R*cos(gamma)*sin(alpha)*sin(beta) - ...
      2*omdz*sqrt3*cos(gamma)*power(r4,2)*sin(alpha)*sin(beta) + omdx*sqrt6*power(r4,2)*power(cos(gamma),2)*sin(2*alpha)*sin(beta) + omdx*sqrt2*cos(gamma)*power(r4,2)*power(sin(alpha),2)*sin(2*beta) + ...
      3*omdz*R*r4*sin(alpha)*sin(gamma) + 5*omdy*cos(gamma)*power(r4,2)*power(sin(alpha),2)*sin(beta)*sin(gamma) + 3*ddr4*R*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + ...
      omdz*sqrt2*power(r4,2)*sin(alpha)*sin(beta)*sin(gamma) + power(r4,2)*power(cos(alpha),2)*...
       (power(cos(gamma),2)*(6*omdx - omdy*sqrt6*sin(beta)) + power(sin(gamma),2)*(omdx + omdy*sqrt6*sin(beta)) - cos(gamma)*(2*omdx*sqrt6 + 5*omdy*sin(beta))*sin(gamma) + ...
         cos(beta)*(-2*omdy*sqrt3*cos(gamma) + omdy*sqrt2*sin(gamma))) - cos(beta)*...
       (-(omdz*sqrt6*power(r4,2)*power(cos(gamma),2)*sin(alpha)) + (-3*ddr4*R*sqrt2 + omdz*sqrt6*power(r4,2)*power(sin(gamma),2))*sin(alpha) + 2*omdx*r4*sqrt3*(3*R*sqrt2 + 2*r4*sin(beta))*sin(gamma) + ...
         power(r4,2)*power(sin(alpha),2)*(omdy*sqrt2 - 4*omdx*sqrt3*sin(beta))*sin(gamma) + ...
         r4*cos(gamma)*(6*omdx*R - 2*omdy*r4*sqrt3*power(sin(alpha),2) + 2*omdx*r4*sqrt2*sin(beta) - 5*omdz*r4*sin(alpha)*sin(gamma))) + ...
      omdx*sqrt6*power(r4,2)*power(sin(alpha),2)*power(sin(beta),2)*sin(2*gamma) + (omdx*power(r4,2)*power(cos(beta),2)*(9 - 2*cos(2*alpha) - 5*cos(2*gamma) + 2*sqrt6*sin(2*gamma)))/2. + ...
      (cos(alpha)*(omdy*(11 + cos(2*beta))*power(r4,2)*power(cos(gamma),2)*sin(alpha) - 2*power(r4,2)*power(cos(beta),2)*(omdz*sqrt2*cos(gamma) + 2*omdy*sin(alpha) + 2*omdz*sqrt3*sin(gamma)) + ...
           2*cos(gamma)*(3*omdz*R*r4*sin(beta) + sqrt2*power(r4,2)*power(sin(beta),2)*(omdz - 2*omdy*sqrt3*sin(alpha)*sin(gamma)) + sqrt6*(3*ddr4*R - 2*omdy*power(r4,2)*sin(alpha)*sin(gamma))) - ...
           2*r4*cos(beta)*(-3*omdz*R*sqrt2 + omdz*r4*power(cos(gamma),2)*sin(beta) - 2*r4*cos(gamma)*sin(alpha)*(2*omdx*sqrt3 - omdy*sqrt2*sin(beta)) + ...
              2*r4*sin(alpha)*(omdx*sqrt2 + 2*omdy*sqrt3*sin(beta))*sin(gamma) + omdz*r4*sqrt6*sin(beta)*sin(2*gamma)) + ...
           2*(power(r4,2)*power(sin(gamma),2)*sin(alpha)*(3*omdy*cos(2*beta) - 2*(omdy + omdx*sqrt6*sin(beta))) + (omdz*(-1 + 3*cos(2*gamma))*power(r4,2)*sin(2*beta))/2. + ...
              (-3*ddr4*R + 2*omdz*sqrt3*power(r4,2)*power(sin(beta),2) + 3*omdz*R*r4*sqrt6*sin(beta))*sin(gamma) + 5*omdx*power(r4,2)*sin(alpha)*sin(beta)*sin(2*gamma))))/2.)/9.,...
   (9*omdy*power(R,2) + 6*omdy*power(r4,2)*power(cos(gamma),2)*power(sin(alpha),2) + 2*omdy*power(r4,2)*power(sin(beta),2) + omdy*power(r4,2)*power(sin(alpha),2)*power(sin(gamma),2) + ...
      3*ddr4*R*sqrt6*cos(gamma)*sin(alpha) + omdz*sqrt2*cos(gamma)*power(r4,2)*power(sin(beta),2)*sin(alpha) + 6*omdy*R*r4*sqrt2*sin(beta) + ...
      omdx*sqrt6*power(r4,2)*power(cos(gamma),2)*power(sin(alpha),2)*sin(beta) - omdx*sqrt6*power(r4,2)*power(sin(alpha),2)*power(sin(gamma),2)*sin(beta) + ...
      3*omdz*R*r4*cos(gamma)*sin(alpha)*sin(beta) + omdy*sqrt6*power(r4,2)*power(sin(gamma),2)*sin(2*alpha)*sin(beta) + omdz*power(r4,2)*sin(alpha)*sin(2*beta) - ...
      2*omdy*sqrt6*cos(gamma)*power(r4,2)*power(sin(alpha),2)*sin(gamma) - 3*ddr4*R*sin(alpha)*sin(gamma) + 2*omdz*sqrt3*power(r4,2)*power(sin(beta),2)*sin(alpha)*sin(gamma) + ...
      5*omdx*cos(gamma)*power(r4,2)*power(sin(alpha),2)*sin(beta)*sin(gamma) + 3*omdz*R*r4*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + ...
      power(r4,2)*power(cos(beta),2)*(omdy*power(cos(gamma),2) - omdz*sqrt2*cos(gamma)*sin(alpha) + 2*sin(gamma)*(omdy*sqrt6*cos(gamma) - omdz*sqrt3*sin(alpha) + 3*omdy*sin(gamma))) - ...
      r4*cos(beta)*(omdz*r4*power(cos(gamma),2)*sin(alpha)*sin(beta) + 2*cos(gamma)*(3*omdy*R - omdx*r4*sqrt3*power(sin(alpha),2) + omdy*r4*sqrt2*sin(beta)) + ...
         omdx*r4*sqrt2*power(sin(alpha),2)*sin(gamma) + omdy*(6*R*sqrt6 - r4*sqrt2*sin(2*alpha) + 4*r4*sqrt3*sin(beta))*sin(gamma) + ...
         omdz*sin(alpha)*(-3*R*sqrt2 + 2*r4*sin(beta)*sin(gamma)*(sqrt6*cos(gamma) + 3*sin(gamma)))) + ...
      power(r4,2)*power(cos(alpha),2)*(2*omdy*power(cos(beta),2) + cos(beta)*(cos(gamma)*(-2*omdx*sqrt3 + 2*omdy*sqrt2*sin(beta)) + (omdx*sqrt2 + 4*omdy*sqrt3*sin(beta))*sin(gamma)) + ...
         sin(beta)*(power(cos(gamma),2)*(-(omdx*sqrt6) + omdy*sin(beta)) + power(sin(gamma),2)*(omdx*sqrt6 + 6*omdy*sin(beta)) - 5*omdx*cos(gamma)*sin(gamma) + omdy*sqrt6*sin(beta)*sin(2*gamma))) - ...
      (cos(alpha)*(4*omdx*power(r4,2)*power(cos(beta),2)*sin(alpha) - power(r4,2)*power(cos(gamma),2)*sin(alpha)*(11*omdx + omdx*cos(2*beta) - 4*omdy*sqrt6*sin(beta)) + ...
           2*cos(gamma)*((3*ddr4*R - 2*omdz*sqrt3*power(r4,2))*sin(beta) + r4*sqrt2*(-3*omdz*R*sqrt3 + omdx*r4*sin(alpha)*sin(2*beta))) + ...
           cos(beta)*(6*ddr4*R*sqrt2 + 2*omdz*sqrt6*power(r4,2)*power(cos(gamma),2) - 2*omdz*sqrt6*power(r4,2)*power(sin(gamma),2) + 8*omdy*sqrt3*cos(gamma)*power(r4,2)*sin(alpha) + ...
              8*omdx*sqrt3*power(r4,2)*sin(alpha)*sin(beta)*sin(gamma) + 5*omdz*power(r4,2)*sin(2*gamma)) + ...
           2*(-(omdx*(-2 + 3*cos(2*beta))*power(r4,2)*power(sin(gamma),2)*sin(alpha)) + (3*omdz*R*r4 + 3*ddr4*R*sqrt6*sin(beta) + omdz*sqrt2*power(r4,2)*sin(beta))*sin(gamma) + ...
              power(r4,2)*sin(alpha)*(omdx*sqrt6 + omdx*sqrt6*power(sin(beta),2) + 5*omdy*sin(beta))*sin(2*gamma))))/2.)/9.,...
   (r4*(25*omdz*r4 + 5*omdz*r4*power(cos(gamma),2) + 3*omdz*r4*power(sin(beta),2) - 5*omdz*r4*power(cos(gamma),2)*power(sin(beta),2) - 5*omdz*r4*power(sin(gamma),2) + ...
        5*omdz*r4*power(sin(beta),2)*power(sin(gamma),2) - 12*omdx*R*sqrt6*cos(gamma)*sin(alpha) + 4*omdy*r4*sqrt2*cos(gamma)*power(sin(beta),2)*sin(alpha) + ...
        12*omdy*R*cos(gamma)*sin(alpha)*sin(beta) - 8*omdx*r4*sqrt3*cos(gamma)*sin(alpha)*sin(beta) + 5*omdy*r4*power(cos(gamma),2)*sin(alpha)*sin(2*beta) - ...
        5*omdy*r4*power(sin(gamma),2)*sin(alpha)*sin(2*beta) - 4*omdz*r4*sqrt6*cos(gamma)*sin(gamma) + 4*omdz*r4*sqrt6*cos(gamma)*power(sin(beta),2)*sin(gamma) + 12*omdx*R*sin(alpha)*sin(gamma) + ...
        8*omdy*r4*sqrt3*power(sin(beta),2)*sin(alpha)*sin(gamma) + 4*omdx*r4*sqrt2*sin(alpha)*sin(beta)*sin(gamma) + 12*omdy*R*sqrt6*sin(alpha)*sin(beta)*sin(gamma) + ...
        8*omdz*r4*sqrt3*sin(2*beta)*sin(gamma) + r4*power(cos(beta),2)*(5*omdz*power(cos(gamma),2) - omdz*(3 + 5*power(sin(gamma),2)) - 8*omdy*sqrt3*sin(alpha)*sin(gamma) - ...
           4*sqrt2*cos(gamma)*(omdy*sin(alpha) + omdz*sqrt3*sin(gamma))) + 2*cos(beta)*...
         (4*omdz*r4*sqrt2*cos(gamma)*sin(beta) + sin(alpha)*(6*omdy*R*sqrt2 + 2*omdx*r4*sqrt6*power(cos(gamma),2) - 2*omdx*r4*sqrt6*power(sin(gamma),2) - 3*omdy*r4*sin(beta) - ...
              4*omdy*r4*sqrt6*cos(gamma)*sin(beta)*sin(gamma) + 5*omdx*r4*sin(2*gamma))) + ...
        2*cos(alpha)*(2*cos(gamma)*(3*omdy*R*sqrt6 + omdx*r4*sqrt2*power(sin(beta),2) + 3*omdx*R*sin(beta) + 2*omdy*r4*sqrt3*sin(beta)) - ...
           2*(3*omdy*R - 2*omdx*r4*sqrt3*power(sin(beta),2) + omdy*r4*sqrt2*sin(beta) - 3*omdx*R*sqrt6*sin(beta))*sin(gamma) - 2*omdx*r4*power(cos(beta),2)*(sqrt2*cos(gamma) + 2*sqrt3*sin(gamma)) + ...
           cos(beta)*(6*omdx*R*sqrt2 + 2*omdy*r4*sqrt6*power(sin(gamma),2) - 3*omdx*r4*sin(beta) - 5*omdx*r4*power(sin(gamma),2)*sin(beta) + ...
              power(cos(gamma),2)*(-2*omdy*r4*sqrt6 + 5*omdx*r4*sin(beta)) - 4*omdx*r4*sqrt6*cos(gamma)*sin(beta)*sin(gamma) - 5*omdy*r4*sin(2*gamma)))))/36.]';

Fout = m*Fout;
Fout = Fout(:,1) + Fout(:,2) + Fout(:,3) + Fout(:,4);

% inertia moment of the sphere
Fsphere = [Ixx*ddq(5), Iyy*ddq(6), Izz*ddq(7)]'
Fout = Fsphere + Fout;

end